test -d ./creds || mkdir ./creds
rm -rf ./creds/*

SI=`basename ./crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/keystore/*_sk | sed 's/_sk$//'`
echo "### signingIdentity = " $SI

### get private key
cp -p ./crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/keystore/${SI}_sk creds/${SI}-priv
echo "### private key : " ./creds/${SI}-priv
openssl ec -in creds/${SI}-priv -noout -text
cat creds/${SI}-priv


### get public key
openssl x509 -pubkey -in ./crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/signcerts/Admin@org1.example.com-cert.pem -noout > ./creds/${SI}-pub
echo "### public key : " ./creds/${SI}-pub
openssl ec -pubin -in creds/${SI}-pub -noout -text
cat creds/${SI}-pub


### create def
CERT=`cat ./crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/signcerts/Admin@org1.example.com-cert.pem | while read LINE; do echo $LINE"\n"; done | tr -d '\n'`
echo '{"name":"PeerAdmin","mspid":"Org1MSP","roles":null,"affiliation":"","enrollmentSecret":"","enrollment":{"signingIdentity":"'${SI}'","identity":{"certificate":"'${CERT}'"}}}' > ./creds/PeerAdmin
echo "### profile : " 
cat ./creds/PeerAdmin | jq
cat ./creds/PeerAdmin | jq ".enrollment.identity.certificate" | sed 's/\\n/\n/g' | sed 's/^"//g' | openssl x509 -noout -text

